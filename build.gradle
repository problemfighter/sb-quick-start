buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven { url "https://dl.bintray.com/hmtmcse/maven/" }
		maven { url "https://repo.maven.apache.org/maven2/" }
	}
	dependencies {
		classpath 'org.ajoberstar.grgit:grgit-core:3.1.1'
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE' apply false
	id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply false
}


group = 'com.hmtmcse'
version = '0.0.1'



allprojects {

	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven { url "https://dl.bintray.com/hmtmcse/maven/" }
		maven { url "https://repo.maven.apache.org/maven2/" }
	}

	apply plugin: 'java'
	apply plugin: 'idea'

	sourceCompatibility = '11'
	dependencies {}
}


Boolean isSpringBootProject(String name) {
	String projectRoot = rootProject.projectDir
	List projectRoots = [frameworkPath, applicationPath]
	for (String projectRootName : projectRoots) {
		File rootPath = new File(projectRoot, projectRootName)
		List modules = ["module"]
		for (String moduleName : modules) {
			File subsectionDirectory = new File(rootPath, moduleName)
			if (subsectionDirectory.exists()) {
				if (subsectionDirectory.list().contains(name)) {
					return true
				}

			}
		}
	}
	return false
}

subprojects { project ->
	if (isSpringBootProject(project.name)) {
		println("SB Module: " + project.name)
		apply plugin: 'org.springframework.boot'
		apply plugin: 'io.spring.dependency-management'
		dependencies {
			compileOnly 'org.projectlombok:lombok'
			annotationProcessor 'org.projectlombok:lombok'
			implementation 'org.springframework.boot:spring-boot-starter-web'
			testImplementation('org.springframework.boot:spring-boot-starter-test') {
				exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
			}
		}
	}
}

